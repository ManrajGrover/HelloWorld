FORMAT: 1A
HOST: ec2-54-201-109-161.us-west-2.compute.amazonaws.com:8080/demo-0.0.1-SNAPSHOT/

# Tech Inventory Management System

Tech Inventory Management System is a management software that helps IT Team at Practo manage their inventory with great efficiency and simplicity

# Group User
Defines those who have access to the dashboard

## All user's details [/users]

### Get all users [GET]

+ Response 200 (application/json)

    + Attributes (object)
        + id: 1 (number, required)
            ID of user
        + name: Pradesh Khanna (string, required)
            Name of user
        + email: pradeshkhanna@practo.com (string, required)
            Email id of user
    
    + Body
        [
          {
            "id": 1,
            "name": "Pradesh Khanna",
            "email": "pradeshkhanna@practo.com"
          },
          {
            "id": 2,
            "name": "Swadesh Khanna",
            "email": "swadeshkhanna@practo.com"
          }
        ]

# Group Requests
Defines requests a user can make

## Request by ID [/request/{id}]

+ Parameters
    + id - Request ID
    

### Get Request Details by ID [GET]

+ Response 200 (application/json)

    + Attributes (object)
        + id: 1 (number, required)
            ID of request
        + userName: Manraj Singh (string, required)
            User's name linked to request
        + productName: MacBook (string, required)
            Product name associated with the request
        + productCompany: Apple (string, required)
            Product company associated with the request
        + Version: 2016 (string, required)
            Version of product associated with the request
        + reply: Approved (string, required)
            Reply associated with request
    
    + Body
        {
            id: 1,
            userName: "Manraj Singh Grover",
            productName: "MacBook",
            productCompany: "Apple",
            version: "2014",
            reply: "Yes"
        }

### Update a request [PATCH]

+ Request (application/json)

    + Attributes (object)
        + reply: Approved (string, required)
            Reply associated with request

+ Response 200 (application/json)
    
    + Body
        {
          id:1,
          message:"Request has been updated",
          productCompany: "Apple",
          productName: "MacBook",
          reply: "NO",
          version: "2014"
        }

## Request by User Id [/requests/user/{id}]

### Gets requests made by a User [GET]

+ Response 200 (application/json)
    
    + Body
        [
            {
                id: 1,
                userName: "Manraj Singh Grover",
                productName: "MacBook",
                productCompany: "Apple",
                version: "2014",
                reply: "Yes"
            },
            {
                id: 2,
                userName: "Manraj Singh Grover",
                productName: "iPhone",
                productCompany: "Apple",
                version: "6",
                reply: ""
            }
        ]

## All requests' details and their creation [/requests]

### Gets all requests [GET]

+ Response 200 (application/json)
    
    + Body
        [
            {
                id: 1,
                userName: "Manraj Singh Grover",
                productName: "MacBook",
                productCompany: "Apple",
                version: "2014",
                reply: "Yes"
            },
            {
                id: 2,
                userName: "Manraj Singh Grover",
                productName: "iPhone",
                productCompany: "Apple",
                version: "6",
                reply: ""
            }
        ]

### Raise a request [POST]

+ Request (application/json)

    + Attributes (object)
        + userId: 2 (number, required)
            ID of user
        + productId: 1 (string, required)
            ID of product

+ Response 200 (application/json)
    
    + Body
          {
            id: 3,
            message: "Request has been raised",
            productCompany: "Apple",
            productName: "iPhone",
            reply: "",
            version: "6",
          }

# Group User issues and returns
Provides user's issues and returns

## All of user's issues [/history]

### Issue an item [POST]

+ Request (application/json)

    + Attributes (object)
        + userId: 5 (number, required)
            User ID
        + productId: 5 (number, required)
            Product ID
        + producTag: XYZ (string, required)
            Tag of item issued

+ Response 201 (application/json)
    
    + Body
        {
          availability: true, 
          id: 2,
          message: "Item available and issued"
        }

## All of user's returns [/history/{id}]

+ Parameters
    + id - Issue Number

### Return an item [PATCH]

+ Request (application/json)

    + Attributes (object)
        + productTag: XYZ (string, required)
            Tag of item issued

+ Response 200 (application/json)

    + Body
        {
          availability: true,
          id: 0,
          message: "Item returned"
        }

## User's history [/history/user/{id}]

### Get History of User by User ID [GET]

+ Parameters
    + id - ID of user

+ Response 200 (application/json)

    + Attributes (object)
        + id: 5 (number, required)
            Issue ID
        + productName: MacVook (string, required)
            Product name linked to issue
        + productCompany: Apple (string, required)
            Product Company linked to issue
        + productVersion: 2014 (string, required)
            Product Version linked to issue
    
    + Body
        [
            {
                id: 1,
                productCompany: "Apple",
                productName: "MacBook",
                productVersion: "2014"
            }
        ]

# Group Item Details
Details of an item

## Getting, updating and deleting an item [/items/{item_id}]

+ Parameters
    + item_id - ID of item

### Get item details [GET]

+ Response 200 (application/json)

    + Attributes (object)
        + itemId: 5 (number, required)
            Item ID
        + productId: 1 (number, required)
            Product ID
        + name: MacBook (string, required)
            Product's name
        + company: Apple (string, required)
            Product's company
        + version: 2016 (string, required)
            Product's version
        + tag: PQR (string, required)
            Product's tag
        + available: No (string, required)
            Availability
    
    + Body
        {
            itemId: 1,
            productId: 1,
            name: "MacBook",
            company: "Apple",
            version: "2014",
            tag: "PQR",
            available: "No"
        }

### Update an item [PATCH]

+ Request (application/json)

    + Attributes (object)
        + productId: 1 (number, required)
            Product ID
        + productTag: XYZ (string, required)
            Tag of item issued

+ Response 200 (application/json)
    
    + Body
        {
          company: "Apple",
          itemId: 1,
          message: "Item has been updated",
          name: "MacBook",
          productId: 0,
          tag: "RSTUV"version:"2014"
        }

### Delete an item [DELETE]

+ Response 204 (application/json)

## Item creation and getting list of the same [/items]

### Add an item [PATCH]

+ Request (application/json)

    + Attributes (object)
        + productId: 1 (number, required)
            Product ID
        + productTag: XYZ (string, required)
            Tag of item issued


+ Response 200 (application/json)

    + Body
        {
          company: "Apple",
          itemId: 6,
          message: "Item has been added",
          name: "iPhone",
          productId: 0,
          tag: "RTY",
          version: "6"
        }
### Get all items [GET]


+ Response 200 (application/json)

    + Body
        [
            {
                itemId: 1,
                productId: 1,
                name: "MacBook",
                company: "Apple",
                version: "2014",
                tag: "RSTUV",
                available: "No"
            },
            {
                itemId: 2,
                productId: 2,
                name: "iPhone",
                company: "Apple",
                version: "6",
                tag: "XYZ",
                available: "Yes"
            },
            {
                itemId: 6,
                productId: 2,
                name: "iPhone",
                company: "Apple",
                version: "6",
                tag: "RTY",
                available: "Yes"
            }
        ]

## Item count [/items/{item_id}/count]

+ Parameters
    + item_id - ID of item

### Get count of particular product [GET]


+ Response 200 (application/json)

    + Body
        4

# Group Product
Details of a product

## Getting, updating and deleting an product [/products/{product_id}]

+ Parameters
    + product_id - ID of product

### Get product details [GET]

+ Response 200 (application/json)
    
    + Body
        {
            id: 1,
            name: "MacBook",
            company: "Apple",
            version: "2014"
        }

### Update a product [PATCH]

+ Request (application/json)

    + Attributes (object)
        + name: Three (string, required)
            Name of product
        + company: OnePlus (string, required)
            Company of product
        + version: 2016 (string, required)
            Version of product

+ Response 200 (application/json)
    
    + Body
        {
            company: "OnePlus",
            id: 6,
            message: "Product has been updated",
            name: "One",
            version: "2013"
        }

### Delete a product [DELETE]

+ Response 204 (application/json)

## Product creation and getting list of the same [/products]

### Add a product [PATCH]

+ Request (application/json)

    + Attributes (object)
        + name: Three (string, required)
            Name of product
        + company: OnePlus (string, required)
            Company of product
        + version: 2016 (string, required)
            Version of product


+ Response 200 (application/json)

    + Body
        {
          company: "OnePlus",
          id: 6,
          message: "Product has been created",
          name: "Three",
          version: "2016"
        }

### Get all products [GET]


+ Response 200 (application/json)

    + Body
        [
            {
                id: 1,
                name: "MacBook",
                company: "Apple",
                version: "2014"
            },
            {
                id: 2,
                name: "iPhone",
                company: "Apple",
                version: "6"
            },
            {
                id: 3,
                name: "iPhone",
                company: "Apple",
                version: "5"
            },
            {
                id: 5,
                name: "Two",
                company: "OnePlus",
                version: "2014"
            }
        ]